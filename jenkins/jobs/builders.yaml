- builder
    name: devstack-checkout
    builders:
      - shell: |
          #!/bin/bash -xe
          if [[ ! -e devstack-gate ]]; then
              git clone git://git.openstack.org/openstack-infra/devstack-gate
          else
              cd devstack-gate
              git remote set-url origin git://git.openstack.org/openstack-infra/devstack-gate
              git remote update
              git reset --hard
              if ! git clean -x -f ; then
                  sleep 1
                  git clean -x -f
              fi
              git checkout master
              git reset --hard remotes/origin/master
              if ! git clean -x -f ; then
                  sleep 1
                  git clean -x -f
              fi
              cd ..
          fi

- builder:
    name: devstack-checkout-http
    builders:
      - shell: |
          #!/bin/bash -xe
          if [[ ! -e devstack-gate ]]; then
              git clone http://git.openstack.org/openstack-infra/devstack-gate
          else
              cd devstack-gate
              git remote set-url origin http://git.openstack.org/openstack-infra/devstack-gate
              git remote update
              git reset --hard
              if ! git clean -x -f ; then
                  sleep 1
                  git clean -x -f
              fi
              git checkout master
              git reset --hard remotes/origin/master
              if ! git clean -x -f ; then
                  sleep 1
                  git clean -x -f
              fi
              cd ..
          fi

- builder:
    name: link-logs
    builders:
      - shell: |
          #!/bin/sh
          echo "Triggered by: https://review.openstack.org/$ZUUL_CHANGE patchset $ZUUL_PATCHSET"

          echo "Detailed logs: http://ci-logs.a10cloud.com/$LOG_PATH/"


- builder:
    name: net-info
    builders:
      - shell: |
          #!/bin/sh
          export PATH=$PATH:/sbin
          echo "Network interface addresses..."
          ip address show
          echo "Network routing tables..."
          ip route show
          ip -6 route show
          echo "Network neighbors..."
          ip neighbor show

- builder:
    name: contact
    builders:
      - shell: |
          #!/bin/sh
          echo "For problems with this job, contact {name} <{email}> freenode: {irc}"

- builder:
    name: print-template-name
    builders:
      - shell: 'echo JJB template: {template-name}'

- builder:
    name: gerrit-git-prep
    builders:
      - shell: |
          #!/bin/bash
          count=0
          until /usr/local/jenkins/slave_scripts/gerrit-git-prep.sh https://review.openstack.org git://git.openstack.org ; do
              echo "git failed, retrying"
              count=$(($count + 1))
              if [ $count -eq 3 ]; then
                  echo "Maximum of 3 git retries reached"
                  exit 1
              fi
              sleep 5
          done

- builder:
    name: zuul-git-prep
    builders:
      - shell: |
          #!/bin/bash -xe
          CLONEMAP=`mktemp`
          function cleanup {
              rm -f $CLONEMAP
          }
          trap cleanup EXIT
          cat > $CLONEMAP << EOF
          clonemap:
            - name: $ZUUL_PROJECT
              dest: .
          EOF
          /usr/zuul-env/bin/zuul-cloner -m $CLONEMAP --cache-dir /opt/git \
              git://git.openstack.org $ZUUL_PROJECT
- builder:
    name: zuul-git-branch-prep
    builders:
      - shell: |
          #!/bin/bash -xe
          CLONEMAP=`mktemp`
          function cleanup {{
              rm -f $CLONEMAP
          }}
          trap cleanup EXIT
          cat > $CLONEMAP << EOF
          clonemap:
            - name: $ZUUL_PROJECT
              dest: .
          EOF
          # If this is called in a periodic job, these will not be set
          export ZUUL_BRANCH=${{ZUUL_BRANCH:-master}}
          export ZUUL_REF=${{ZUUL_REF:-None}}
          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              BRANCH_ARG="--branch $BRANCH_OVERRIDE"
          fi
          /usr/zuul-env/bin/zuul-cloner -m $CLONEMAP --cache-dir /opt/git \
              $BRANCH_ARG git://git.openstack.org $ZUUL_PROJECT

- builder:
    name: branch-git-prep
    builders:
      - shell: |
          #!/bin/bash
          export BRANCH={branch}
          /usr/local/jenkins/slave_scripts/gerrit-git-prep.sh https://review.openstack.org git://git.openstack.org

- builder:
    name: zuul-clone
    builders:
      - shell: |
          #!/bin/bash
          /usr/zuul-env/bin/zuul-cloner --cache-dir /opt/git \
              git://git.openstack.org {project}

- builder:
    name: revoke-sudo
    builders:
      - shell: |
          #!/bin/bash -x
          sudo rm -f /etc/sudoers.d/jenkins-sudo
          # Prove that general sudo access is actually revoked
          ! sudo -n true

- builder:
    name: coverage
    builders:
      - shell: "/usr/local/jenkins/slave_scripts/run-cover.sh {env}"

- builder:
    name: linters
    builders:
      - tox:
          envlist: linters

- builder:
    name: bashate
    builders:
      - tox:
          envlist: bashate

- builder:
    name: pep8
    builders:
      - shell: "/usr/local/jenkins/slave_scripts/run-pep8.sh {env}"

- builder:
    name: pylint
    builders:
      - shell: "/usr/local/jenkins/slave_scripts/run-pylint.sh {env}"

- builder:
    name: run-tests
    builders:
      - shell: "./run-tests.sh"

- builder:
    name: js-build
    builders:
      - shell: "/usr/local/jenkins/slave_scripts/run-jsbuild.sh {command}"

- builder:
    name: python26
    builders:
      - shell: "/usr/local/jenkins/slave_scripts/run-tox.sh py26"

- builder:
    name: python27
    builders:
      - shell: "/usr/local/jenkins/slave_scripts/run-tox.sh py27"

- builder:
    name: python34
    builders:
      - shell: "/usr/local/jenkins/slave_scripts/run-tox.sh py34"

- builder:
    name: pypy
    builders:
      - shell: "/usr/local/jenkins/slave_scripts/run-tox.sh pypy"

- builder:
    name: tox
    builders:
      - shell: "/usr/local/jenkins/slave_scripts/run-tox.sh {envlist}"

- builder:
    name: assert-no-extra-files
    builders:
      - shell: |
          #!/bin/bash
          OUT=`git ls-files --other --exclude-standard --directory`
          if [ -z "$OUT" ]; then
              echo "No extra files created during test."
              exit 0
          else
              echo "The following un-ignored files were created during the test:"
              echo "$OUT"
              exit 0  # TODO: change to 1 to fail tests.
          fi

- builder:
    name: tarball
    builders:
      - shell: |
          #!/bin/bash -xe
          /usr/local/jenkins/slave_scripts/run-tarball.sh {env}
          /usr/local/jenkins/slave_scripts/run-wheel.sh {env}

- builder:
    name: print-node-uuid
    builders:
      - shell: |
          #!/bin/sh
          [ -f /etc/nodepool/uuid ] && echo "Node UUID: $(cat /etc/nodepool/uuid)"

- builder:
    name: allow-local-ssh-root
    builders:
      - shell: |
          #!/bin/bash
          echo "" | sudo tee -a /etc/ssh/sshd_config
          echo "Match address 127.0.0.1" | sudo tee -a /etc/ssh/sshd_config
          echo "    PermitRootLogin without-password" | sudo tee -a /etc/ssh/sshd_config
          echo "" | sudo tee -a /etc/ssh/sshd_config
          echo "Match address ::1" | sudo tee -a /etc/ssh/sshd_config
          echo "    PermitRootLogin without-password" | sudo tee -a /etc/ssh/sshd_config
          mkdir -p .ssh
          ssh-keygen -f ~/.ssh/id_rsa -b 2048 -P ""
          sudo mkdir -p /root/.ssh
          cat ~/.ssh/id_rsa.pub | sudo tee -a /root/.ssh/authorized_keys
          if [ -f /usr/bin/yum ]; then
              sudo systemctl restart sshd
          elif [ -f /usr/bin/apt-get ]; then
              sudo service ssh restart
          fi

- builder:
    name: install-pypy
    builders:
      - shell: |
            sudo apt-get -y update
            sudo apt-get -y install pypy pypy-dev

- builder:
    name: install-py26
    builders:
      - shell: |
            sudo apt-get -y update
            sudo apt-get -y install python-software-properties software-properties-common
            sudo add-apt-repository -y ppa:fkrull/deadsnakes
            sudo apt-get -y update
            sudo apt-get -y install python2.6 python2.6-dev
